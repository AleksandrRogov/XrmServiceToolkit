/**
* MSCRM 2011 Web Service Toolkit for JavaScript
* @author Jaimie Ji
* @author David Berry
* @current version : 2.1

* Credits:
*   The idea of this library was inspired by Daniel Cai's CrmWebServiceToolkit.
*   The idea of BusinessEntity was inspired by Daniel Cai && Ascentium CrmService JavaScript Library.
*   The REST Endpoint functions were inspired by MSCRM 2011 SDK JavaScript code and various resources from CRM websites and forums. Some of them were just copies with minor modification.
*   The Soap functions were inspired by Daniel Cai && Jamie Miley && Paul Way && Customer Effective.
*   Additional thanks to all contributors of MSCRM and i have learned a lot from you all.
* Date: February, 2012
*
* Special Thanks:
*   JetBrains ReSharper Open License
* Date: July, 2012
**/

XrmServiceToolkit = function () { }; XrmServiceToolkit.Common = function () { var e = function (e) { Xrm.Utility !== undefined && Xrm.Utility.alertDialog !== undefined ? Xrm.Utility.alertDialog(e) : alert(e) }; var t = function (e, t) { var n; if (e === null || t === null || e === undefined || t === undefined) { n = false } else { n = e.replace(/[{}]/g, "").toLowerCase() === t.replace(/[{}]/g, "").toLowerCase() } return n }; var n = function (e) { Xrm.Page.getControl(e).setDisabled(false) }; var r = function (e) { Xrm.Page.getControl(e).setDisabled(true) }; var i = function (e) { Xrm.Page.getControl(e).setVisible(true) }; var s = function (e) { Xrm.Page.getControl(e).setVisible(false) }; var o = function (e, t) { Xrm.Page.getAttribute(e).setRequiredLevel(t) }; var u = function (t) { e(t.message) }; var a = function (e) { try { var t = XrmServiceToolkit.Soap.RetrieveEntityMetadata("Entity", e, false); if (t && t.length === 1) { return t[0].ObjectTypeCode } else { return null } } catch (n) { u(n.message); return null } }; var f = function (t, n, r) { if (Xrm.Page.ui.setFormNotification !== undefined) { if (!!r) { Xrm.Page.ui.clearFormNotification(r); if (n === 1) { Xrm.Page.ui.setFormNotification(t, "ERROR", r) } if (n === 2) { Xrm.Page.ui.setFormNotification(t, "INFO", r) } if (n === 3) { Xrm.Page.ui.setFormNotification(t, "WARNING", r) } } else { var i = "formNotification00"; Xrm.Page.ui.clearFormNotification(i); if (n === 1) { Xrm.Page.ui.setFormNotification(t, "ERROR", i) } if (n === 2) { Xrm.Page.ui.setFormNotification(t, "INFO", i) } if (n === 3) { Xrm.Page.ui.setFormNotification(t, "WARNING", i) } } } else { var s = document.getElementById("crmNotifications"); if (s === null || s === undefined) { e("Cannot find the notification area"); return } if (typeof s.AddNotification !== "undefined" && typeof s.control.AddNotification !== "undefined") { e("Add Notification is no longer supported"); return } if (n === 1) { if (typeof s.AddNotification !== "undefined") { s.AddNotification("mep1", 1, "source", t) } else if (typeof s.control.AddNotification !== "undefined") { s.control.AddNotification("mep1", 1, "source", t) } } if (n === 2) { if (typeof s.AddNotification !== "undefined") { s.AddNotification("mep3", 3, "source", t) } else if (typeof s.control.AddNotification !== "undefined") { s.control.AddNotification("mep3", 3, "source", t) } } if (n === 3) { if (typeof s.AddNotification !== "undefined") { s.AddNotification("mep2", 2, "source", t) } else if (typeof s.control.AddNotification !== "undefined") { s.control.AddNotification("mep2", 2, "source", t) } } if (t === "") { if (typeof s.SetNotifications !== "undefined") { s.SetNotifications(null, null) } else if (typeof s.control.SetNotifications !== "undefined") { s.control.SetNotifications(null, null) } else { e("Set Notification is no longer supported") } } } }; var l = function (e, t) { if (Xrm.Page.getControl(e).setNotification !== undefined) { Xrm.Page.getControl(e).setNotification(t) } }; var c = function (e, t) { var n = 1e3 * 60 * 60 * 24; var r = e.getTime(); var i = t.getTime(); var s = Math.abs(r - i); return Math.round(s / n) }; var h = function (e) { var t = Xrm.Page.ui.tabs.get(e); if (t != null) { Xrm.Page.ui.controls.forEach(function (e) { if (e.getParent() !== null && e.getParent().getParent() != null && e.getParent().getParent() === t && e.getControlType() != "subgrid") { e.setDisabled(true) } }) } }; var p = function (e) { var t = Xrm.Page.ui.tabs; for (var n = 0, r = t.getLength() ; n < r; n++) { var i = t.get(n); var s = i.sections; for (var o = 0, u = s.getLength() ; o < u; o++) { var a = s.get(o); if (a.getLabel().toLowerCase() === e.toLowerCase()) { Xrm.Page.ui.controls.forEach(function (t) { if (t.getParent() !== null && t.getParent().getLabel() === e && t.getControlType() != "subgrid") { t.setDisabled(true) } }); break } } } }; return { EnableField: n, DisableField: r, ShowField: i, HideField: s, UpdateRequiredLevel: o, GetObjectTypeCode: a, CalculateDaysBetween: c, AddNotification: f, AddControlNotification: l, ShowError: u, GuidsAreEqual: t, DisableAllControlsInTab: h, DisableAllControlsInSection: p } }(); XrmServiceToolkit.Rest = function () { var e = function (e) { Xrm.Utility !== undefined && Xrm.Utility.alertDialog !== undefined ? Xrm.Utility.alertDialog(e) : alert(e) }; var t = function (e) { if (e === null || e === "" || e === undefined) return e; for (var t = 0, n = "", r = "", i = 0, s = e.length; i < s; i++) { var o = e.charCodeAt(i); if (o > 96 && o < 123 || o > 64 && o < 91 || o === 32 || o > 47 && o < 58 || o === 46 || o === 44 || o === 45 || o === 95) n += String.fromCharCode(o); else n += "&#" + o + ";"; if (++t === 500) { r += n; n = ""; t = 0 } } if (n.length) r += n; return r }; var n = function (e) { var n = ""; var r; for (var i = 0, s = e.length; i < s; i++) { r = e.charCodeAt(i); if (r >= 55296 && r <= 57343) if (i + 1 < e.length) { var o = e.charCodeAt(i + 1); if (o >= 56320 && o <= 57343) { n += "CRMEntityReferenceOpen" + ((r - 55296) * 1024 + (o & 1023) + 65536).toString(16) + "CRMEntityReferenceClose"; i++ } else n += String.fromCharCode(r) } else n += String.fromCharCode(r); else n += String.fromCharCode(r) } e = n; n = ""; for (i = 0, s = e.length; i < s; i++) { r = e.charCodeAt(i); if (r >= 55296 && r <= 57343) n += String.fromCharCode(65533); else n += String.fromCharCode(r) } e = n; e = t(e); e = e.replace(/CRMEntityReferenceOpen/g, "&#x"); e = e.replace(/CRMEntityReferenceClose/g, ";"); return e }; var r = function (e) { if ("undefined" === typeof e || "unknown" === typeof e || null === e) return e; else if (typeof e != "string") e = e.toString(); return n(e) }; var i = function (e) { if (typeof e != "string") e = e.toString(); return e }; var s = function () { var e; if (typeof window.GetGlobalContext != "undefined") { e = window.GetGlobalContext() } else { if (typeof Xrm != "undefined") { e = Xrm.Page.context } else if (typeof window.parent.Xrm != "undefined") { e = window.parent.Xrm.Page.context } else { throw new Error("Context is not available.") } } return e }; var o = function () { var e = typeof s().getClientUrl !== "undefined" ? s().getClientUrl() : s().getServerUrl(); if (e.match(/\/$/)) { e = e.substring(0, e.length - 1) } return e }; var u = function () { return o() + "/XRMServices/2011/OrganizationData.svc/" }; var a = function (e) { return new Error("Error : " + e.status + ": " + e.statusText + ": " + JSON.parse(e.responseText).error.message.value) }; var f = function (e, t) { var n; if (typeof t === "string") { n = /Date\(([-+]?\d+)\)/.exec(t); if (n) { return new Date(parseInt(t.replace("/Date(", "").replace(")/", ""), 10)) } } return t }; var l = function (e, t) { if (typeof e === "undefined" || e === null) { throw new Error(t) } }; var c = function (e, t) { if (typeof e != "string") { throw new Error(t) } }; var h = function (e, t) { if (typeof e != "function") { throw new Error(t) } }; var p = function (e, t) { if (typeof e != "boolean") { throw new Error(t) } }; var d = function () { if (XMLHttpRequest) { return new XMLHttpRequest } try { return new ActiveXObject("MSXML2.XMLHTTP.6.0") } catch (t) { try { return new ActiveXObject("MSXML2.XMLHTTP.3.0") } catch (t) { e("This browser is not AJAX enabled."); return null } } }; var v = function (e, t, n, r, i) { l(e, "XrmServiceToolkit.REST.createRecord requires the object parameter."); c(t, "XrmServiceToolkit.REST.createRecord requires the type parameter is a string."); h(n, "XrmServiceToolkit.REST.createRecord requires the successCallback is a function."); h(r, "XrmServiceToolkit.REST.createRecord requires the errorCallback is a function."); p(i, "XrmServiceToolkit.REST.createRecord requires the async is a boolean."); var s = d(); s.open("POST", u() + t, i); s.setRequestHeader("Accept", "application/json"); s.setRequestHeader("Content-Type", "application/json; charset=utf-8"); if (i) { s.onreadystatechange = function () { if (this.readyState === 4) { s.onreadystatechange = null; if (s.status === 201) { n(JSON.parse(s.responseText, f).d) } else { r(a(s)) } } }; s.send(JSON.stringify(e)) } else { s.send(JSON.stringify(e)); if (s.status === 201) { n(JSON.parse(s.responseText, f).d) } else { r(a(s)) } } }; var m = function (e, t, n, r, i, s, o) { c(e, "XrmServiceToolkit.REST.retrieveRecord requires the id parameter is a string."); c(t, "XrmServiceToolkit.REST.retrieveRecord requires the type parameter is a string."); if (n != null) c(n, "XrmServiceToolkit.REST.retrieveRecord requires the select parameter is a string."); if (r != null) c(r, "XrmServiceToolkit.REST.retrieveRecord requires the expand parameter is a string."); h(i, "XrmServiceToolkit.REST.retrieveRecord requires the successCallback parameter is a function."); h(s, "XrmServiceToolkit.REST.retrieveRecord requires the errorCallback parameter is a function."); p(o, "XrmServiceToolkit.REST.retrieveRecord requires the async parameter is a boolean."); var l = ""; if (n != null || r != null) { l = "?"; if (n != null) { var v = "$select=" + n; if (r != null) { v = v + "," + r } l = l + v } if (r != null) { l = l + "&$expand=" + r } } var m = d(); m.open("GET", u() + t + "(guid'" + e + "')" + l, o); m.setRequestHeader("Accept", "application/json"); m.setRequestHeader("Content-Type", "application/json; charset=utf-8"); if (o) { m.onreadystatechange = function () { if (m.readyState === 4) { if (m.status === 200) { i(JSON.parse(m.responseText, f).d) } else { s(a(m)) } } }; m.send() } else { m.send(); if (m.status === 200) { i(JSON.parse(m.responseText, f).d) } else { s(a(m)) } } }; var g = function (e, t, n, r, i, s) { c(e, "XrmServiceToolkit.REST.updateRecord requires the id parameter."); l(t, "XrmServiceToolkit.REST.updateRecord requires the object parameter."); c(n, "XrmServiceToolkit.REST.updateRecord requires the type parameter."); h(r, "XrmServiceToolkit.REST.updateRecord requires the successCallback is a function."); h(i, "XrmServiceToolkit.REST.updateRecord requires the errorCallback is a function."); p(s, "XrmServiceToolkit.REST.updateRecord requires the async parameter is a boolean."); var o = d(); o.open("POST", u() + n + "(guid'" + e + "')", s); o.setRequestHeader("Accept", "application/json"); o.setRequestHeader("Content-Type", "application/json; charset=utf-8"); o.setRequestHeader("X-HTTP-Method", "MERGE"); if (s) { o.onreadystatechange = function () { if (o.readyState === 4) { if (o.status === 204 || o.status === 1223) { r() } else { i(a(o)) } } }; o.send(JSON.stringify(t)) } else { o.send(JSON.stringify(t)); if (o.status === 204 || o.status === 1223) { r() } else { i(a(o)) } } }; var y = function (e, t, n, r, i) { c(e, "XrmServiceToolkit.REST.deleteRecord requires the id parameter."); c(t, "XrmServiceToolkit.REST.deleteRecord requires the type parameter."); h(n, "XrmServiceToolkit.REST.deleteRecord requires the successCallback is a function."); h(r, "XrmServiceToolkit.REST.deleteRecord requires the errorCallback is a function."); p(i, "XrmServiceToolkit.REST.deleteRecord requires the async parameter is a boolean."); var s = d(); s.open("POST", u() + t + "(guid'" + e + "')", i); s.setRequestHeader("Accept", "application/json"); s.setRequestHeader("Content-Type", "application/json; charset=utf-8"); s.setRequestHeader("X-HTTP-Method", "DELETE"); if (i) { s.onreadystatechange = function () { if (s.readyState === 4) { if (s.status === 204 || s.status === 1223) { n() } else { r(a(s)) } } }; s.send() } else { s.send(); if (s.status === 204 || s.status === 1223) { n() } else { r(a(s)) } } }; var b = function (e, t, n, r, i, s) { c(e, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the type parameter is a string."); if (t != null) c(t, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the options parameter is a string."); h(n, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the successCallback parameter is a function."); h(r, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the errorCallback parameter is a function."); h(i, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the OnComplete parameter is a function."); p(s, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the async parameter is a boolean."); var o = ""; if (t != null) { if (t.charAt(0) != "?") { o = "?" + t } else { o = t } } var l = d(); l.open("GET", u() + e + o, s); l.setRequestHeader("Accept", "application/json"); l.setRequestHeader("Content-Type", "application/json; charset=utf-8"); if (s) { l.onreadystatechange = function () { if (l.readyState === 4) { if (l.status === 200) { var t = JSON.parse(l.responseText, f).d; n(t.results); if (t.__next == null) { i() } else { var o = t.__next.substring((u() + e).length); b(e, o, n, r, i, s) } } else { r(a(l)) } } }; l.send() } else { l.send(); if (l.status === 200) { var v = JSON.parse(l.responseText, f).d; n(v.results); if (v.__next == null) { i() } else { var m = v.__next.substring((u() + e).length); b(e, m, n, r, i, s) } } else { r(a(l)) } } }; var w = function (e) { l(e, "The value passed to the performRequest function settings parameter is null or undefined."); var t = d(); t.open(e.type, e.url, e.async); t.setRequestHeader("Accept", "application/json"); if (e.action != null) { t.setRequestHeader("X-HTTP-Method", e.action) } t.setRequestHeader("Content-Type", "application/json; charset=utf-8"); if (e.async) { t.onreadystatechange = function () { if (t.readyState === 4) { if (t.status === 204 || t.status === 1223 || t.status === 201) { e.success(t) } else { if (e.error) { e.error(a(t)) } else { a(t) } } } }; if (typeof e.data === "undefined") { t.send() } else { t.send(e.data) } } else { if (typeof e.data === "undefined") { t.send() } else { t.send(e.data) } if (t.status === 204 || t.status === 1223 || t.status === 201) { e.success(t) } else { if (e.error) { e.error(a(t)) } else { a(t) } } } }; var E = function (e, t, n, r, i, s, o, a) { l(e, "XrmServiceToolkit.REST.associateRecord requires the entityid1 parameter."); l(t, "XrmServiceToolkit.REST.associateRecord requires the odataSetName1 parameter."); l(n, "XrmServiceToolkit.REST.associateRecord requires the entityid2 parameter."); l(r, "XrmServiceToolkit.REST.associateRecord requires the odataSetName2 parameter."); l(i, "XrmServiceToolkit.REST.associateRecord requires the relationship parameter."); h(s, "XrmServiceToolkit.REST.associateRecord requires the successCallback is a function."); h(o, "XrmServiceToolkit.REST.associateRecord requires the errorCallback is a function."); p(a, "XrmServiceToolkit.REST.associateRecord requires the async parameter is a boolean"); var f = {}; f.uri = u() + "/" + r + "(guid'" + n + "')"; var c = window.JSON.stringify(f); w({ type: "POST", url: u() + "/" + t + "(guid'" + e + "')/$links/" + i, data: c, success: s, error: o, async: a }) }; var S = function (e, t, n, r, i, s, o) { l(e, "XrmServiceToolkit.REST.disassociateRecord requires the entityid1 parameter."); l(t, "XrmServiceToolkit.REST.disassociateRecord requires the odataSetName parameter."); l(n, "XrmServiceToolkit.REST.disassociateRecord requires the entityid2 parameter."); l(r, "XrmServiceToolkit.REST.disassociateRecord requires the relationship parameter."); h(i, "XrmServiceToolkit.REST.disassociateRecord requires the successCallback is a function."); h(s, "XrmServiceToolkit.REST.disassociateRecord requires the errorCallback is a function."); p(o, "XrmServiceToolkit.REST.disassociateRecord requires the async parameter is a boolean."); var a = u() + "/" + t + "(guid'" + e + "')/$links/" + r + "(guid'" + n + "')"; w({ url: a, type: "POST", action: "DELETE", error: s, success: i, async: o }) }; return { Create: v, Retrieve: m, Update: g, Delete: y, RetrieveMultiple: b, Associate: E, Disassociate: S } }(); XrmServiceToolkit.Soap = function () { var e = function (e) { Xrm.Utility !== undefined && Xrm.Utility.alertDialog !== undefined ? Xrm.Utility.alertDialog(e) : alert(e) }; var t = function (e) { if (e === null || e === "" || e === undefined) return e; for (var t = 0, n = "", r = "", i = 0, s = e.length; i < s; i++) { var o = e.charCodeAt(i); if (o > 96 && o < 123 || o > 64 && o < 91 || o === 32 || o > 47 && o < 58 || o === 46 || o === 44 || o === 45 || o === 95) n += String.fromCharCode(o); else n += "&#" + o + ";"; if (++t === 500) { r += n; n = ""; t = 0 } } if (n.length) r += n; return r }; var n = function (e) { var n = ""; var r; var i; var s; for (i = 0, s = e.length; i < s; i++) { r = e.charCodeAt(i); if (r >= 55296 && r <= 57343) if (i + 1 < e.length) { var o = e.charCodeAt(i + 1); if (o >= 56320 && o <= 57343) { n += "CRMEntityReferenceOpen" + ((r - 55296) * 1024 + (o & 1023) + 65536).toString(16) + "CRMEntityReferenceClose"; i++ } else n += String.fromCharCode(r) } else n += String.fromCharCode(r); else n += String.fromCharCode(r) } e = n; n = ""; for (i = 0, s = e.length; i < s; i++) { r = e.charCodeAt(i); if (r >= 55296 && r <= 57343) n += String.fromCharCode(65533); else n += String.fromCharCode(r) } e = n; e = t(e); e = e.replace(/CRMEntityReferenceOpen/g, "&#x"); e = e.replace(/CRMEntityReferenceClose/g, ";"); return e }; var r = function (e) { if ("undefined" === typeof e || "unknown" === typeof e || null === e) return e; else if (typeof e != "string") e = e.toString(); return n(e) }; var i = function (e) { if (typeof e != "string") e = e.toString(); return e }; var s = function (e, t) { t = t || 2; e = "" + e; while (e.length < t) { e = "0" + e } return e }; var o = function (e) { return e.getFullYear() + "-" + s(e.getMonth() + 1) + "-" + s(e.getDate()) + "T" + s(e.getHours()) + ":" + s(e.getMinutes()) + ":" + s(e.getSeconds()) }; var u = function (e) { if (typeof e == typeof "" && e.slice(0, 1) == "{" && e.slice(-1) == "}") { e = e.slice(1, -1) } return typeof e === "object" && e.getTime ? o(e) : r(e) }; var a = function () { var e; if (typeof window.GetGlobalContext != "undefined") { e = window.GetGlobalContext() } else { if (typeof Xrm != "undefined") { e = Xrm.Page.context } else if (typeof window.parent.Xrm != "undefined") { e = window.parent.Xrm.Page.context } else { throw new Error("Context is not available.") } } return e }; var f = function () { var e = typeof a().getClientUrl != "undefined" ? a().getClientUrl() : a().getServerUrl(); if (e.match(/\/$/)) { e = e.substring(0, e.length - 1) } return e }; var l = function () { return f() + "/XRMServices/2011/Organization.svc/web" }; var c = function (e, t) { var n; if (typeof t === "string") { n = /Date\(([-+]?\d+)\)/.exec(t); if (n) { return new Date(parseInt(t.replace("/Date(", "").replace(")/", ""), 10)) } } return t }; var h = function (e, t) { this.type = e; this.value = t }; var p = function (e, t, n) { this.id = e; this.logicalName = t; this.name = n; this.type = "EntityReference" }; var d = function (e) { this.value = e; this.type = "EntityCollection" }; var v = function (e, t) { this.value = e; this.formattedValue = t; this.type = "OptionSetValue" }; var m = function (e, t) { this.id = !t ? "00000000-0000-0000-0000-000000000000" : t; this.logicalName = e; this.attributes = new Object }; var g = function (e) { var t = e.split(/\D/); return new Date(Date.UTC(t[0], --t[1], t[2], t[3], t[4], t[5])) }; var y = function (e) { var t = { s: "http://schemas.xmlsoap.org/soap/envelope/", a: "http://schemas.microsoft.com/xrm/2011/Contracts", i: "http://www.w3.org/2001/XMLSchema-instance", b: "http://schemas.datacontract.org/2004/07/System.Collections.Generic", c: "http://schemas.microsoft.com/xrm/2011/Metadata", ser: "http://schemas.microsoft.com/xrm/2011/Contracts/Services" }; return t[e] || null }; var b = function (e) { if (e == null) { return true } if (e.attributes.getNamedItem("i:nil") != null && e.attributes.getNamedItem("i:nil").value == "true") { return true } return false }; var w = function (e, t) { if (typeof e.selectNodes != "undefined") { return e.selectNodes(t) } else { var n = []; var r = e.evaluate(t, e, y, XPathResult.ANY_TYPE, null); var i = r.iterateNext(); while (i) { n.push(i); i = r.iterateNext() } return n } }; var E = function (e, t) { if (typeof e.selectSingleNode != "undefined") { return e.selectSingleNode(t) } else { var n = new XPathEvaluator; var r = n.evaluate(t, e, y, XPathResult.FIRST_ORDERED_NODE_TYPE, null); return r.singleNodeValue } }; var S = function (e, t) { var n = E(e, t); if (b(n)) { return null } if (typeof n.text != "undefined") { return n.text } else { return n.textContent } }; var x = function (e) { if (typeof e.text != "undefined") { return e.text } else { return e.textContent } }; var T = function (e) { var t = ["xmlns:s='http://schemas.xmlsoap.org/soap/envelope/'", "xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'", "xmlns:i='http://www.w3.org/2001/XMLSchema-instance'", "xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'", "xmlns:c='http://schemas.microsoft.com/xrm/2011/Metadata'", "xmlns:ser='http://schemas.microsoft.com/xrm/2011/Contracts/Services'"]; e.setProperty("SelectionNamespaces", t.join(" ")) }; var N = function (t) { var n = null; try { n = new ActiveXObject("Microsoft.XMLDOM"); n.async = false; n.loadXML(t) } catch (r) { if (window.DOMParser) { var i = new DOMParser; n = i.parseFromString(t, "text/xml") } else { e("Cannot convert the XML string to a cross-browser XML object.") } } return n }; var C = function (t) { var n = ""; try { if (t != null) { if (typeof XMLSerializer !== "undefined" && typeof t.xml === "undefined") { n = (new XMLSerializer).serializeToString(t) } else { if (typeof t.xml !== "undefined") { n = t.xml } else if (typeof t[0].xml !== "undefined") { n = t[0].xml } } } } catch (r) { e("Cannot convert the XML to a string.") } return n }; m.prototype = { serialize: function () { var e = ["<b:value i:type='a:Entity'>"]; e.push('<a:Attributes xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">'); for (var t in this.attributes) { var n = this.attributes[t]; e.push("<a:KeyValuePairOfstringanyType>"); e.push("<b:key>", t, "</b:key>"); if (n === null || n.value === null) { e.push("<b:value i:nil='true' />") } else { var i = !n.type ? typeof n : r(n.type); var s; var o; var a; var f; var l; var c; switch (i) { case "OptionSetValue": s = n.hasOwnProperty("value") ? n["value"] : n; o = u(s); e.push("<b:value i:type='a:OptionSetValue'>"); e.push("<a:Value>", o, "</a:Value>", "</b:value>"); break; case "EntityCollection": e.push("<b:value i:type='a:EntityCollection'>"); e.push("<a:Entities>"); s = n.hasOwnProperty("value") ? n["value"] : n; var h = I(s) ? s : [s]; for (var p = 0, d = h.length; p < d; p++) { var v = h[p]; a = v.hasOwnProperty("id") ? v["id"] : v; f = u(a); l = v.hasOwnProperty("logicalName") ? v["logicalName"] : v; c = u(l); e.push("<a:Entity>"); e.push("<a:Attributes>"); e.push("<a:KeyValuePairOfstringanyType>"); e.push("<b:key>partyid</b:key>"); e.push("<b:value i:type='a:EntityReference'>"); e.push("<a:Id>", f, "</a:Id>"); e.push("<a:LogicalName>", c, "</a:LogicalName>"); e.push("<a:Name i:nil='true' />"); e.push("</b:value>"); e.push("</a:KeyValuePairOfstringanyType>"); e.push("</a:Attributes>"); e.push("<a:EntityState i:nil='true' />"); e.push("<a:FormattedValues />"); e.push("<a:Id>00000000-0000-0000-0000-000000000000</a:Id>"); e.push("<a:LogicalName>activityparty</a:LogicalName>"); e.push("<a:RelatedEntities />"); e.push("</a:Entity>") } e.push("</a:Entities>"); e.push("<a:EntityName i:nil='true' />"); e.push("<a:MinActiveRowVersion i:nil='true' />"); e.push("<a:MoreRecords>false</a:MoreRecords>"); e.push("<a:PagingCookie i:nil='true' />"); e.push("<a:TotalRecordCount>0</a:TotalRecordCount>"); e.push("<a:TotalRecordCountLimitExceeded>false</a:TotalRecordCountLimitExceeded>"); e.push("</b:value>"); break; case "EntityReference": a = n.hasOwnProperty("id") ? n["id"] : n; f = u(a); l = n.hasOwnProperty("logicalName") ? n["logicalName"] : n; c = u(l); e.push("<b:value i:type='a:EntityReference'>"); e.push("<a:Id>", f, "</a:Id>"); e.push("<a:LogicalName>", c, "</a:LogicalName>"); e.push("<a:Name i:nil='true' />", "</b:value>"); break; case "Money": s = n.hasOwnProperty("value") ? n["value"] : n; o = u(s); e.push("<b:value i:type='a:Money'>"); e.push("<a:Value>", o, "</a:Value>", "</b:value>"); break; case "guid": s = n.hasOwnProperty("value") ? n["value"] : n; o = u(s); e.push("<b:value i:type='c:guid' xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/'>"); e.push(o, "</b:value>"); break; case "number": s = n.hasOwnProperty("value") ? n["value"] : n; o = u(s); var m = parseInt(o) === o ? "c:int" : "c:decimal"; e.push("<b:value i:type='", m, "' xmlns:c='http://www.w3.org/2001/XMLSchema'>"); e.push(o, "</b:value>"); break; default: s = n.hasOwnProperty("value") ? n["value"] : n; o = u(s); i = typeof s === "object" && s.getTime ? "dateTime" : i; e.push("<b:value i:type='c:", i, "' xmlns:c='http://www.w3.org/2001/XMLSchema'>", o, "</b:value>"); break } } e.push("</a:KeyValuePairOfstringanyType>") } e.push("</a:Attributes><a:EntityState i:nil='true' />"); e.push("<a:FormattedValues xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />"); e.push("<a:Id>", u(this.id), "</a:Id>"); e.push("<a:LogicalName>", this.logicalName, "</a:LogicalName>"); e.push("<a:RelatedEntities xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />"); e.push("</b:value>"); return e.join("") }, deserialize: function (e) { var t = new Object; var n = e.childNodes; for (var r = 0, i = n.length; r < i; r++) { var s; var o = n[r]; switch (o.nodeName) { case "a:Attributes": var u = o; for (var a = 0, f = u.childNodes.length; a < f; a++) { var l = u.childNodes[a]; var c = l.childNodes; s = x(c[0]); var m = c[1]; var y = m.attributes.getNamedItem("i:type").value; var b; var w; switch (y) { case "a:OptionSetValue": var E = new v; E.type = y.replace("a:", ""); E.value = parseInt(x(m)); t[s] = E; break; case "a:EntityReference": b = new p; b.type = y.replace("a:", ""); var S = m.childNodes; b.id = x(S[0]); b.logicalName = x(S[1]); b.name = x(S[2]); t[s] = b; break; case "a:EntityCollection": b = new d; b.type = y.replace("a:", ""); var T = []; var N = m.childNodes; for (var C = 0, k = N[0].childNodes.length; C < k; C++) { var L = l.childNodes[1].childNodes[0].childNodes[C].childNodes[0].childNodes; for (var A = 0, O = L.length; A < O; A++) { var M = L[A].childNodes; var _ = x(M[0]); if (_ === "partyid") { var D = new p; D.id = x(M[1].childNodes[0]); D.logicalName = x(M[1].childNodes[1]); D.name = x(M[1].childNodes[2]); T[C] = D } } } b.value = T; t[s] = b; break; case "a:Money": w = new h; w.type = y.replace("a:", ""); w.value = parseFloat(x(m)); t[s] = w; break; default: w = new h; w.type = y.replace("c:", "").replace("a:", ""); if (w.type === "int") { w.value = parseInt(x(m)) } else if (w.type === "decimal" || w.type === "double") { w.value = parseFloat(x(m)) } else if (w.type === "dateTime") { w.value = g(x(m)) } else if (w.type === "boolean") { w.value = x(m) === "false" ? false : true } else if (w.type === "AliasedValue") { var P = m.childNodes[2]; w.value = x(P); if (P.attributes.getNamedItem("i:type").nodeValue.split(":")[1] === "a:EntityReference") { w = new p; w.type = "EntityReference"; w.id = x(P.childNodes[0]); w.logicalName = x(P.childNodes[1]); w.name = x(P.childNodes[2]) } } else { w.value = x(l.childNodes[1]) } t[s] = w; break } } this.attributes = t; break; case "a:Id": this.id = x(o); break; case "a:LogicalName": this.logicalName = x(o); break; case "a:FormattedValues": var H = o; for (var B = 0, j = H.childNodes.length; B < j; B++) { var F = H.childNodes[B]; s = x(F.childNodes[0]); this.attributes[s].formattedValue = x(F.childNodes[1]); if (isNaN(this.attributes[s].value) && this.attributes[s].type === "dateTime") { this.attributes[s].value = new Date(this.attributes[s].formattedValue) } } break } } } }; var k = function (e, t, n, r) { n = n || false; var i = ["<soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'>", "<soap:Body>", "<", t, " xmlns='http://schemas.microsoft.com/xrm/2011/Contracts/Services' xmlns:i='http://www.w3.org/2001/XMLSchema-instance'>", e, "</", t, ">", "</soap:Body>", "</soap:Envelope>"].join(""); var s = new XMLHttpRequest; s.open("POST", l(), n); s.setRequestHeader("Accept", "application/xml, text/xml, */*"); s.setRequestHeader("Content-Type", "text/xml; charset=utf-8"); s.setRequestHeader("SOAPAction", "http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/" + t); try { s.responseType = "msxml-document" } catch (o) { } if (n) { s.onreadystatechange = function () { if (s.readyState == 4) { s.onreadystatechange = null; if (s.status === 200) { var e = s.responseXML; try { T(e) } catch (t) { } r(e) } else { L(s) } } }; s.send(i) } else { s.send(i); if (s.status == 200) { var u = s.responseXML; try { T(u) } catch (o) { } var a = u; return !!r ? r(a) : a } else { L(s) } } }; var L = function (e) { if (e.status == 12029) { return new Error("The attempt to connect to the server failed.") } if (e.status == 12007) { return new Error("The server name could not be resolved.") } var t = e.responseXML; var n = "Unknown (unable to parse the fault)"; if (typeof t == "object") { var r = null; var i = null; var s = t.firstChild.firstChild; for (var o = 0; o < s.childNodes.length; o++) { var u = s.childNodes[o]; if ("s:Fault" == u.nodeName) { for (var a = 0; a < u.childNodes.length; a++) { var f = u.childNodes[a]; if ("faultstring" == f.nodeName) { r = x(f) } if ("detail" == f.nodeName) { for (var l = 0; l < f.childNodes.length; l++) { var c = f.childNodes[l]; if ("OrganizationServiceFault" == c.nodeName) { for (var h = 0; h < c.childNodes.length; h++) { var p = c.childNodes[h]; if ("ErrorCode" == p.nodeName) { i = x(p); break } } } } } } break } } } if (i != null && r != null) { n = "Error Code:" + i + " Message: " + r } else { if (r != null) { n = r } } return new Error(n) }; var A = function (e, t) { var n = e.serialize(); var r = !!t; var s = ["<request i:type='a:CreateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", n, "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Create</a:RequestName>", "</request>"].join(""); return k(s, "Execute", r, function (e) { var n = S(e, "//b:value"); var s = i(n); if (!r) return s; else t(s) }) }; var O = function (e, t) { var n = e.serialize(); var r = !!t; var s = ["<request i:type='a:UpdateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", n, "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Update</a:RequestName>", "</request>"].join(""); return k(s, "Execute", r, function (e) { var n = S(e, "//a:Results"); var s = i(n); if (!r) return s; else t(s) }) }; var M = function (e, t, n) { var r = ["<request i:type='a:DeleteRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'><a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'><a:KeyValuePairOfstringanyType><b:key>Target</b:key><b:value i:type='a:EntityReference'><a:Id>", t, "</a:Id><a:LogicalName>", e, "</a:LogicalName><a:Name i:nil='true' /></b:value></a:KeyValuePairOfstringanyType></a:Parameters><a:RequestId i:nil='true' /><a:RequestName>Delete</a:RequestName></request>"].join(""); var s = !!n; return k(r, "Execute", s, function (e) { var t = S(e, "//a:Results"); var r = i(t); if (!s) return r; else n(r) }) }; var _ = function (e, t) { var n = !!t; return k(e, "Execute", n, function (e) { if (!n) return e; else t(e) }) }; var D = function (e, t, n, i) { var s = ["<fetch mapping='logical' page='" + t + "' count='5000' paging-cookie='" + n + "'>", e.replace(/\"/g, "'"), "</fetch>"].join(""); var o = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:FetchExpression'>", "<a:Query>", r(s), "</a:Query>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""); return k(o, "Execute", false, function (n) { var r = E(n, "//a:Entities"); var s = S(n, "//a:MoreRecords") === "true"; for (var o = 0, u = r.childNodes.length; o < u; o++) { var a = new m; a.deserialize(r.childNodes[o]); i.push(a) } if (s) { t += 1; var f = S(n, "//a:PagingCookie").replace(/\"/g, "'").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&quot;"); D(e, t, f, i) } else { return i } }) }; var P = function (e, t, n) { var i = e; if (e.slice(0, 7) === "<entity") { i = ["<fetch mapping='logical'>", e.replace(/\"/g, "'"), "</fetch>"].join("") } else { var s = e.indexOf("aggregate") !== -1; var o = e.indexOf("page='1'") !== -1 && e.indexOf("count='") !== -1; var u; var a = N(e); u = E(a, "//entity"); if (u === null) { throw new Error("XrmServiceToolkit.Fetch: No 'entity' node in the provided FetchXML.") } var f = u; try { e = C(f).replace(/\"/g, "'") } catch (l) { if (f.xml) { e = f.xml.replace(/\"/g, "'") } else { throw new Error("XrmServiceToolkit.Fetch: This client does not provide the necessary XML features to continue.") } } if (!s && !o) { i = ["<fetch mapping='logical' >", e, "</fetch>"].join("") } } var c = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:FetchExpression'>", "<a:Query>", r(i), "</a:Query>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""); var h = !!n; return k(c, "Execute", h, function (r) { var i = E(r, "//a:Entities"); var s = S(r, "//a:MoreRecords") === "true"; var o = []; if (i != null) { for (var u = 0, a = i.childNodes.length; u < a; u++) { var f = new m; f.deserialize(i.childNodes[u]); o.push(f) } if (t && s) { var l = S(r, "//a:PagingCookie").replace(/\"/g, "'").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&quot;"); D(e, 2, l, o) } if (!h) return o; else n(o) } }) }; var H = function (e, t, n, r) { var i = ""; var s = ""; if (n != null) { for (var o = 0, a = n.length; o < a; o++) { i += "<c:string>" + n[o] + "</c:string>" } s = "<a:AllColumns>false</a:AllColumns>" + "<a:Columns xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>" + i + "</a:Columns>" } else { s = "<a:AllColumns>true</a:AllColumns><a:Columns xmlns:b='http://schemas.microsoft.com/2003/10/Serialization/Arrays' />" } var f = ["<request i:type='a:RetrieveRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", u(t), "</a:Id>", "<a:LogicalName>", e, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>ColumnSet</b:key>", "<b:value i:type='a:ColumnSet'>", s, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Retrieve</a:RequestName>", "</request>"].join(""); var l = !!r; return k(f, "Execute", !!r, function (e) { var t = E(e, "//b:value"); var n = new m; n.deserialize(t); if (!l) return n; else r(n) }) }; var B = function (e, t) { var n = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:QueryExpression'>", e, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""); var r = !!t; return k(n, "Execute", r, function (e) { var n = E(e, "//a:Entities"); var i = []; for (var s = 0, o = n.childNodes.length; s < o; s++) { var u = new m; u.deserialize(n.childNodes[s]); i[s] = u } if (!r) return i; else t(i) }) }; var j = function (e, t, n) { var r = []; for (var i = 0, s = t.length; i < s; i++) { if (t[i] != "" && t[i] != undefined) { r.push(e, t[i], n) } } return r.join("") }; var F = function (e, t) { var n = []; for (var r = 0, i = e.length; r < i; r++) { if (e[r] != "") { if (typeof t[r] == typeof []) { n.push("<condition attribute='", e[r], "' operator='in' >"); for (var s in t[r]) { var o = u(t[r][s]); n.push("<value>" + o + "</value>") } n.push("</condition>") } else if (typeof t[r] == typeof "") { n.push("<condition attribute='", e[r], "' operator='eq' value='", u(t[r]), "' />") } } } return n.join("") }; var I = function (e) { return e.constructor.toString().indexOf("Array") != -1 }; var q = function (e, t) { var n = e.entityName; var r = e.attributes; var i = e.values; var s = e.columnSet; var o = e.orderBy || ""; r = I(r) ? r : [r]; i = I(i) ? i : [i]; o = !!o && I(o) ? o : [o]; s = !!s && I(s) ? s : [s]; var u = ["<entity name='", n, "'>", j("<attribute name='", s, "' />"), j("<order attribute='", o, "' />"), "<filter>", F(r, i), "</filter>", "</entity>"].join(""); return P(u, false, t) }; var R = function (e, t) { var n = e.entityName; var r = e.attributes; var i = e.values; var s = e.columnSet; var o = e.orderBy || ""; r = I(r) ? r : [r]; i = I(i) ? i : [i]; o = !!o && I(o) ? o : [o]; s = !!s && I(s) ? s : [s]; var u = ["<entity name='", n, "'>", j("<attribute name='", s, "' />"), j("<order attribute='", o, "' />"), "<filter>", F(r, i), "</filter>", "</entity>"].join(""); var a = !!t; return P(u, true, a) }; var U = function (e, t, n, r, s) { var o = ["<request i:type='b:SetStateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>EntityMoniker</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(t), "</a:Id>", "<a:LogicalName>", e, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>State</c:key>", "<c:value i:type='a:OptionSetValue'>", "<a:Value>", n.toString(), "</a:Value>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Status</c:key>", "<c:value i:type='a:OptionSetValue'>", "<a:Value>", r.toString(), "</a:Value>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>SetState</a:RequestName>", "</request>"].join(""); var a = !!s; return k(o, "Execute", a, function (e) { var t = S(e, "//ser:ExecuteResult"); var n = i(t); if (!a) return n; else s(n) }) }; var z = function (e, t, n, r, s, o) { var a = s; a = I(a) ? a : [a]; var f = []; for (var l = 0, c = a.length; l < c; l++) { if (a[l].id != "") { f.push("<a:EntityReference>", "<a:Id>", a[l].id, "</a:Id>", "<a:LogicalName>", r, "</a:LogicalName>", "<a:Name i:nil='true' />", "</a:EntityReference>") } } var h = f.join(""); var p = ["<request i:type='a:AssociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", u(n), "</a:Id>", "<a:LogicalName>", t, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>Relationship</b:key>", "<b:value i:type='a:Relationship'>", "<a:PrimaryEntityRole i:nil='true' />", "<a:SchemaName>", e, "</a:SchemaName>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RelatedEntities</b:key>", "<b:value i:type='a:EntityReferenceCollection'>", h, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Associate</a:RequestName>", "</request>"].join(""); var d = !!o; return k(p, "Execute", d, function (e) { var t = S(e, "//ser:ExecuteResult"); var n = i(t); if (!d) return n; else o(n) }) }; var W = function (e, t, n, r, s, o) { var a = s; a = I(a) ? a : [a]; var f = []; for (var l = 0, c = a.length; l < c; l++) { if (a[l].id != "") { f.push("<a:EntityReference>", "<a:Id>", a[l].id, "</a:Id>", "<a:LogicalName>", r, "</a:LogicalName>", "<a:Name i:nil='true' />", "</a:EntityReference>") } } var h = f.join(""); var p = ["<request i:type='a:DisassociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", u(n), "</a:Id>", "<a:LogicalName>", t, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>Relationship</b:key>", "<b:value i:type='a:Relationship'>", "<a:PrimaryEntityRole i:nil='true' />", "<a:SchemaName>", e, "</a:SchemaName>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RelatedEntities</b:key>", "<b:value i:type='a:EntityReferenceCollection'>", h, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Disassociate</a:RequestName>", "</request>"].join(""); var d = !!o; return k(p, "Execute", d, function (e) { var t = S(e, "//ser:ExecuteResult"); var n = i(t); if (!d) return n; else o(n) }) }; var X = function () { var e = ["<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />", "<a:RequestId i:nil='true' />", "<a:RequestName>WhoAmI</a:RequestName>", "</request>"].join(""); var t = k(e, "Execute"); return x(w(t, "//b:value")[0]) }; var V = function () { var e = ["<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />", "<a:RequestId i:nil='true' />", "<a:RequestName>WhoAmI</a:RequestName>", "</request>"].join(""); var t = k(e, "Execute"); return x(w(t, "//b:value")[1]) }; var $ = function () { var e = ["<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='true'>", "<entity name='role'>", "<attribute name='name' />", "<attribute name='businessunitid' />", "<attribute name='roleid' />", "<order attribute='name' descending='false' />" + "<link-entity name='systemuserroles' from='roleid' to='roleid' visible='false' intersect='true'>", "<link-entity name='systemuser' from='systemuserid' to='systemuserid' alias='aa'>", "<filter type='and'>", "<condition attribute='systemuserid' operator='eq-userid' />", "</filter>", "</link-entity>", "</link-entity>", "</entity>", "</fetch>"].join(""); var t = P(e); var n = []; if (t !== null && typeof t != "undefined") { for (var r = 0, i = t.length; r < i; r++) { n[r] = t[r].attributes["name"].value } } return n }; var J = function () { var e = $(); for (var t = 0, n = e.length; t < n; t++) { for (var r = 0, i = arguments.length; r < i; r++) { if (e[t] === arguments[r]) { return true } } } return false }; var K = function (e, t, n, r, s) { var o = ["<request i:type='b:AssignRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(t), "</a:Id>", "<a:LogicalName>", e, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Assignee</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(r), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Assign</a:RequestName>", "</request>"].join(""); var a = !!s; return k(o, "Execute", a, function (e) { var t = S(e, "//ser:ExecuteResult"); var n = i(t); if (!a) return n; else s(n) }) }; var Q = function (e, t) { var n = e.targetEntityName; var r = e.targetEntityId; var s = e.principalEntityName; var o = e.principalEntityId; var a = e.accessRights; a = I(a) ? a : [a]; var f = ""; for (var l = 0, c = a.length; l < c; l++) { f += u(a[l]) + " " } var h = ["<request i:type='b:GrantAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(r), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>PrincipalAccess</c:key>", "<c:value i:type='b:PrincipalAccess'>", "<b:AccessMask>", f, "</b:AccessMask>", "<b:Principal>", "<a:Id>", u(o), "</a:Id>", "<a:LogicalName>", s, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:Principal>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>GrantAccess</a:RequestName>", "</request>"].join(""); var p = !!t; return k(h, "Execute", p, function (e) { var n = S(e, "//ser:ExecuteResult"); var r = i(n); if (!p) return r; else t(r) }) }; var G = function (e, t) { var n = e.targetEntityName; var r = e.targetEntityId; var s = e.principalEntityName; var o = e.principalEntityId; var a = e.accessRights; a = I(a) ? a : [a]; var f = ""; for (var l = 0, c = a.length; l < c; l++) { f += u(a[l]) + " " } var h = ["<request i:type='b:ModifyAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(r), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>PrincipalAccess</c:key>", "<c:value i:type='b:PrincipalAccess'>", "<b:AccessMask>", f, "</b:AccessMask>", "<b:Principal>", "<a:Id>", u(o), "</a:Id>", "<a:LogicalName>", s, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:Principal>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>ModifyAccess</a:RequestName>", "</request>"].join(""); var p = !!t; return k(h, "Execute", p, function (e) { var n = S(e, "//ser:ExecuteResult"); var r = i(n); if (!p) return r; else t(r) }) }; var Y = function (e, t) { var n = e.targetEntityName; var r = e.targetEntityId; var s = e.revokeeEntityName; var o = e.revokeeEntityId; var a = ["<request i:type='b:RevokeAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(r), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Revokee</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(o), "</a:Id>", "<a:LogicalName>", s, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>RevokeAccess</a:RequestName>", "</request>"].join(""); var f = !!t; return k(a, "Execute", f, function (e) { var n = S(e, "//ser:ExecuteResult"); var r = i(n); if (!f) return r; else t(r) }) }; var Z = function (e, t) { var n = e.targetEntityName; var r = e.targetEntityId; var i = e.principalEntityName; var s = e.principalEntityId; var o = ["<request i:type='b:RetrievePrincipalAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(r), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Principal</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", u(s), "</a:Id>", "<a:LogicalName>", i, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>RetrievePrincipalAccess</a:RequestName>", "</request>"].join(""); var a = !!t; return k(o, "Execute", a, function (e) { var n = S(e, "//b:value"); if (!a) return n; else t(n) }) }; var et = ["Attributes", "ManyToManyRelationships", "ManyToOneRelationships", "OneToManyRelationships", "Privileges", "LocalizedLabels", "Options", "Targets"]; var tt = function (e) { for (var t = 0, n = et.length; t < n; t++) { if (e === et[t]) { return true } } return false }; var nt = function (e) { if (typeof e.baseName != "undefined") { return e.baseName } else { return e.localName } }; var rt = function (e) { if (e.attributes != null && e.attributes.length == 1) { if (e.attributes.getNamedItem("i:nil") != null && e.attributes.getNamedItem("i:nil").nodeValue == "true") { return null } } if (e.firstChild != null && e.firstChild.nodeType == 3) { var t = nt(e); switch (t) { case "ActivityTypeMask": case "ObjectTypeCode": case "ColumnNumber": case "DefaultFormValue": case "MaxValue": case "MinValue": case "MaxLength": case "Order": case "Precision": case "PrecisionSource": case "LanguageCode": return parseInt(e.firstChild.nodeValue, 10); case "AutoRouteToOwnerQueue": case "CanBeChanged": case "CanTriggerWorkflow": case "IsActivity": case "IsActivityParty": case "IsAvailableOffline": case "IsChildEntity": case "IsCustomEntity": case "IsCustomOptionSet": case "IsDocumentManagementEnabled": case "IsEnabledForCharts": case "IsGlobal": case "IsImportable": case "IsIntersect": case "IsManaged": case "IsReadingPaneEnabled": case "IsValidForAdvancedFind": case "CanBeSecuredForCreate": case "CanBeSecuredForRead": case "CanBeSecuredForUpdate": case "IsCustomAttribute": case "IsPrimaryId": case "IsPrimaryName": case "IsSecured": case "IsValidForCreate": case "IsValidForRead": case "IsValidForUpdate": case "IsCustomRelationship": case "CanBeBasic": case "CanBeDeep": case "CanBeGlobal": case "CanBeLocal": return e.firstChild.nodeValue === "true" ? true : false; case "Value": if (e.firstChild.nodeValue === "true" || e.firstChild.nodeValue == "false") { return e.firstChild.nodeValue == "true" ? true : false } if (e.firstChild.nodeValue == "ApplicationRequired" || e.firstChild.nodeValue == "None" || e.firstChild.nodeValue == "Recommended" || e.firstChild.nodeValue == "SystemRequired") { return e.firstChild.nodeValue } else { return parseInt(e.firstChild.nodeValue, 10) } break; default: return e.firstChild.nodeValue } } if (tt(nt(e))) { var n = []; for (var r = 0, i = e.childNodes.length; r < i; r++) { var s; if (e.childNodes[r].attributes != null && e.childNodes[r].attributes.getNamedItem("i:type") != null) { s = e.childNodes[r].attributes.getNamedItem("i:type").nodeValue.split(":")[1] } else { s = nt(e.childNodes[r]) } var o = rt(e.childNodes[r]); o._type = s; n.push(o) } return n } if (e.childNodes.length == 0) { return null } var u = {}; if (e.attributes.getNamedItem("i:type") != null) { u._type = e.attributes.getNamedItem("i:type").nodeValue.split(":")[1] } for (var a = 0, f = e.childNodes.length; a < f; a++) { if (e.childNodes[a].nodeType == 3) { u[nt(e.childNodes[a])] = e.childNodes[a].nodeValue } else { u[nt(e.childNodes[a])] = rt(e.childNodes[a]) } } return u }; var it = function (e, t, n) { e = I(e) ? e : [e]; var r = ""; for (var i = 0, s = e.length; i < s; i++) { r += u(e[i]) + " " } var o = ['<request i:type="a:RetrieveAllEntitiesRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityFilters</b:key>", '<b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">' + u(r) + "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">' + u(t.toString()) + "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveAllEntities</a:RequestName>", "</request>"].join(""); var a = !!n; return k(o, "Execute", a, function (e) { var t = w(e, "//c:EntityMetadata"); var r = []; for (var i = 0, s = t.length; i < s; i++) { var o = rt(t[i]); o._type = "EntityMetadata"; r.push(o) } if (!a) return r; else n(r) }) }; var st = function (e, t, n, r) { e = I(e) ? e : [e]; var i = ""; for (var s = 0, o = e.length; s < o; s++) { i += u(e[s]) + " " } var a = ['<request i:type="a:RetrieveEntityRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityFilters</b:key>", '<b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">', u(i), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>MetadataId</b:key>", '<b:value i:type="c:guid"  xmlns:c="http://schemas.microsoft.com/2003/10/Serialization/">', u("00000000-0000-0000-0000-000000000000"), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">', u(n.toString()), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>LogicalName</b:key>", '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">', u(t), "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveEntity</a:RequestName>", "</request>"].join(""); var f = !!r; return k(a, "Execute", f, function (e) { var t = w(e, "//b:value"); var n = []; for (var i = 0, s = t.length; i < s; i++) { var o = rt(t[i]); o._type = "EntityMetadata"; n.push(o) } if (!f) return n; else r(n) }) }; var ot = function (e, t, n, r) { var i = ['<request i:type="a:RetrieveAttributeRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityLogicalName</b:key>", '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">', u(e), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>MetadataId</b:key>", '<b:value i:type="ser:guid"  xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">', u("00000000-0000-0000-0000-000000000000"), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">', u(n.toString()), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>LogicalName</b:key>", '<b:value i:type="c:string"   xmlns:c="http://www.w3.org/2001/XMLSchema">', u(t), "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveAttribute</a:RequestName>", "</request>"].join(""); var s = !!r; return k(i, "Execute", s, function (e) { var t = w(e, "//b:value"); var n = []; for (var i = 0, o = t.length; i < o; i++) { var u = rt(t[i]); n.push(u) } if (!s) return n; else r(n) }) }; return { BusinessEntity: m, Execute: _, Fetch: P, Retrieve: H, RetrieveMultiple: B, Create: A, Update: O, Delete: M, QueryByAttribute: q, QueryAll: R, SetState: U, Associate: z, Disassociate: W, Assign: K, RetrievePrincipalAccess: Z, GrantAccess: Q, ModifyAccess: G, RevokeAccess: Y, GetCurrentUserId: X, GetCurrentUserBusinessUnitId: V, GetCurrentUserRoles: $, IsCurrentUserRole: J, RetrieveAllEntitiesMetadata: it, RetrieveEntityMetadata: st, RetrieveAttributeMetadata: ot } }(); XrmServiceToolkit.Extension = function () { var e = function (e) { Xrm.Utility !== undefined && Xrm.Utility.alertDialog !== undefined ? Xrm.Utility.alertDialog(e) : alert(e) }; var t = function () { var e; if (typeof window.GetGlobalContext != "undefined") { e = window.GetGlobalContext() } else { if (typeof Xrm != "undefined") { e = Xrm.Page.context } else if (typeof window.parent.Xrm != "undefined") { e = window.parent.Xrm.Page.context } else { throw new Error("Context is not available.") } } return e }; var n = function () { var e = typeof t().getClientUrl != "undefined" ? t().getClientUrl() : t().getServerUrl(); if (e.match(/\/$/)) { e = e.substring(0, e.length - 1) } return e }; var r = function (t, r) { function s(e) { var t = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(); var n = jQuery("entity[name=" + t + "]", e); jQuery(n).children().each(function () { var e = jQuery(this).attr("name"); var n = jQuery(this).find("shorthelp").text(); o(t, e, n) }) } function o(e, t, n) { var i = jQuery("#" + t + "_c").children(":first"); if (i != null) { var s = '<img id="img_' + t + '" src="/_imgs/ico/16_help.gif" alt="' + n + '" width="16" height="16" /><div id="help_' + t + '" style="visibility: hidden; position: absolute;">: ' + n + "</div>"; jQuery(i).append(s); jQuery("#img_" + t).css("display", r ? "inline" : "none") } } if (Xrm.Page.ui.setFormNotification !== undefined) { e("XrmServiceToolkit.Extension.JQueryXrmFieldTooltip is not supported in CRM2013.\nPlease use the out of box functionality"); return } if (typeof jQuery === "undefined") { var i = "jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."; e(i); return } jQuery.support.cors = true; jQuery.ajax({ type: "GET", url: n() + "/WebResources/" + t, dataType: "xml", success: s, error: function (t, n, r) { e("Something is wrong to setup the tooltip for the fields. Please contact your administrator") } }) }; var i = function (t) { function r(e) { var t = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(); var n = jQuery("entity[name=" + t + "]", e); var r = n.children("ParentField"); var o = []; for (var u = 0, a = r.length; u < a; u++) { var f = r[u]; var l = {}; l.parent = jQuery(f).attr("id"); l.dependent = jQuery(f).children("DependentField:first").attr("id"); l.options = []; var c = jQuery(f).children("Option"); for (var h = 0, p = c.length; h < p; h++) { var d = {}; d.value = jQuery(c[h]).attr("value"); d.showOptions = []; var v = jQuery(c[h]).children("ShowOption"); for (var m = 0, g = v.length; m < g; m++) { var y = {}; y.value = jQuery(v[m]).attr("value"); y.text = jQuery(v[m]).attr("label"); d.showOptions.push(y) } l.options.push(d) } o.push(l) } i.config = o; for (var b in i.config) { var w = i.config[b].parent; var E = i.config[b].dependent; s(w, E, i) } } function s(e, t, n) { for (var r in n.config) { var i = n.config[r]; if (i.parent === e && i.dependent === t) { var s = Xrm.Page.data.entity.attributes.get(e); var o = Xrm.Page.data.entity.attributes.get(t); var u = Xrm.Page.getControl(e); var a = Xrm.Page.getControl(t); var f = o.getValue(); var l; var c; if (s.getValue() === null) { o.setValue(null); o.setSubmitMode("always"); o.fireOnChange(); l = o.controls.get(); for (c in l) { l[c].setDisabled(true) } return } for (var h in i.options) { var p = i.options[h]; var d = p.showOptions; if (s.getValue().toString() === p.value.toString()) { l = o.controls.get(); for (c in l) { l[c].setDisabled(false); l[c].clearOptions(); for (var v in d) { l[c].addOption(d[v]) } } var m = false; var g = d; for (var y in g) { var b = g[y].value; if (f === parseInt(b)) { m = true; break } } if (m) { o.setValue(f) } else { o.setValue(null) } o.setSubmitMode("always"); o.fireOnChange(); if (u.getDisabled() === true) { a.setDisabled(true) } break } } } } } if (typeof jQuery === "undefined") { e("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."); return } jQuery.support.cors = true; jQuery.ajax({ type: "GET", url: n() + "/WebResources/" + t, dataType: "xml", success: r, error: function (t, n, r) { e("Something is wrong to setup the dependent picklist. Please contact your administrator") } }) }; var s = function (t) { function r(t) { var n = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(); var r = jQuery("entity[name=" + n + "]", t); var u = r.children("TargetField"); var a = []; for (var f = 0, l = u.length; f < l; f++) { var c = u[f]; var h = {}; h.target = jQuery(c).attr("id"); h.entityName = jQuery(c).attr("viewentity"); h.viewName = jQuery(c).attr("viewname"); h.dynamic = jQuery(c).children("dynamic").children(); h.fetchXml = o(jQuery(c).children("fetch")); h.layoutXml = o(jQuery(c).children("grid")); a.push(h) } s.config = a; for (var p in s.config) { var d = s.config[p].target; var v = s.config[p].entityName; var m = s.config[p].viewName; var g = s.config[p].dynamic; var y = s.config[p].fetchXml; var b = s.config[p].layoutXml; if (g != null) { for (var w = 0, E = g.length; w < E; w++) { var S = Xrm.Page.getControl(jQuery(g).attr("name")).getControlType(); var x = jQuery(g).attr("fieldvaluetype"); if (Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue() === null) { e(jQuery(g).attr("name") + " does not have a value. Please put validation logic on the field change to call this function. Only use XrmServiceToolkit.Extension.JQueryXrmCustomFilterView when the field has a value."); return } var T = null; switch (S) { case "standard": T = Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue(); break; case "optionset": T = x != null && x === "label" ? Xrm.Page.getAttribute(jQuery(g).attr("name")).getSelectionOption().text : Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue(); break; case "lookup": T = x != null && x === "name" ? Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue()[0].name : Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue()[0].id; break; default: e(jQuery(g).attr("name") + " is not supported for filter lookup view. Please change the configuration."); break } var N = jQuery(g).attr("operator"); if (N === null) { e("operator is missing in the configuration file. Please fix the issue"); return } var C = jQuery(g).attr("fetchnote"); switch (N.toLowerCase()) { case "contains": case "does not contain": T = "%" + T + "%"; break; case "begins with": case "does not begin with": T = T + "%"; break; case "ends with": case "does not end with": T = "%" + T; break; default: T = T; break } y = y.replace(C, T) } } i(d, v, m, y, b) } } function i(e, t, n, r, i) { var s = "{1DFB2B35-B07C-44D1-868D-258DEEAB88E2}"; Xrm.Page.getControl(e).addCustomView(s, t, n, r, i, true) } function o(t) { var n = ""; try { if (t != null) { if (typeof XMLSerializer !== "undefined" && typeof t.xml === "undefined") { n = (new XMLSerializer).serializeToString(t) } else { if (typeof t.xml !== "undefined") { n = t.xml } else if (typeof t[0].xml !== "undefined") { n = t[0].xml } } } } catch (r) { e("Cannot convert the XML to a string.") } return n } if (typeof jQuery === "undefined") { e("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."); return } jQuery.support.cors = true; jQuery.ajax({ type: "GET", url: n() + "/WebResources/" + t, dataType: "xml", success: r, error: function (t, n, r) { e("Something is wrong to setup the custom filter view. Please contact your administrator") } }) }; var o = function (t, n) { if (Xrm.Page.ui.setFormNotification !== undefined) { e("XrmServiceToolkit.Extension.JQueryXrmFormatNotesControl is not supported in CRM2013"); return } if (typeof jQuery === "undefined") { e("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."); return } jQuery.support.cors = true; var r = jQuery("#notescontrol"); if (r === null || r === undefined) return; var i = r.attr("url"); if (i != null) { if (!t) { i = i.replace("EnableInsert=true", "EnableInsert=false") } else if (!n) { i = i.replace("EnableInlineEdit=true", "EnableInlineEdit=false") } r.attr("url", i) } else { var s = r.attr("src"); if (s != null) { if (!t) { s = s.replace("EnableInsert=true", "EnableInsert=false") } else if (!n) { s = s.replace("EnableInlineEdit=true", "EnableInlineEdit=false") } r.attr("src", s) } } }; return { JQueryXrmFieldTooltip: r, JQueryXrmDependentOptionSet: i, JQueryXrmCustomFilterView: s, JQueryXrmFormatNotesControl: o } }()